import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, CallbackQueryHandler

TOKEN = "7711930364:AAEoVeW_M5JhhHCOx_234MU1zO4kgDMltSs"
OWNER_ID = 547994168
PRICE = 4

menu = [
    {
        "name": "–ù–µ–∂–Ω—ã–µ —Å—ã—Ä–Ω–∏—á–∫–∏",
        "description": "–°–ª–∞–¥–∫–∏–µ, –∫–∞–∫ —Ç–≤–æ—è —É–ª—ã–±–∫–∞. –ü–æ–¥–∞—é—Ç—Å—è —Å –∫–ª—É–±–Ω–∏—á–∫–æ–π –∏ –ª—é–±–æ–≤—å—é.",
        "image": "https://i.imgur.com/ZdY2EGe.jpg"
    },
    {
        "name": "–¢—ë–ø–ª—ã–π –±–æ—Ä—â —Å –∑–∞–±–æ—Ç–æ–π",
        "description": "–ö–∞–∂–¥–∞—è –ª–æ–∂–∫–∞ ‚Äî –∫–∞–∫ —Ç—ë–ø–ª–æ–µ –æ–±—ä—è—Ç–∏–µ.",
        "image": "https://i.imgur.com/Z2q5ZpM.jpg"
    },
    {
        "name": "–û–±—ä—è—Ç–∏—è –≤ –ø—é—Ä–µ",
        "description": "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ –ø—é—Ä–µ —Å –∫–æ—Ç–ª–µ—Ç–∫–æ–π, –º—è–≥–∫–æ–µ, –∫–∞–∫ –Ω–∞—à–µ —É—Ç—Ä–æ –≤–º–µ—Å—Ç–µ.",
        "image": "https://i.imgur.com/BY2sQLT.jpg"
    },
    {
        "name": "–õ—é–±–æ–≤–Ω—ã–µ –º–∞–∫–∞—Ä–æ—à–∫–∏",
        "description": "–ú–∞–∫–∞—Ä–æ–Ω—ã —Å —Å—ã—Ä–æ–º –∏ –Ω–æ—Ç–∫–æ–π –æ–±–æ–∂–∞–Ω–∏—è. –ù–∞—Å—Ç–æ—è—â–∞—è –µ–¥–∞ –¥–ª—è –¥—É—à–∏.",
        "image": "https://i.imgur.com/pt6KQqw.jpg"
    },
    {
        "name": "–°–ª–∞–¥–∫–∏–π —Å—é—Ä–ø—Ä–∏–∑",
        "description": "–î–µ—Å–µ—Ä—Ç, –∫–∞–∫ –ø–æ—Ü–µ–ª—É–π ‚Äî –≤–Ω–µ–∑–∞–ø–Ω—ã–π, —Å–ª–∞–¥–∫–∏–π –∏ —Ç–≤–æ–π.",
        "image": "https://i.imgur.com/tKtUKhU.jpg"
    }
]

user_baskets = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(f"{item['name']} ‚Äî {PRICE} üíã", callback_data=f"add_{i}")]
        for i, item in enumerate(menu)
    ]
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ¬´–î–æ–º–∞—à–Ω–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –¥–ª—è –ª—é–±–∏–º–æ–π¬ª! üíï\n\n"
        "–í—ã–±–∏—Ä–∞–π –±–ª—é–¥–∞, –¥–æ–±–∞–≤–ª—è–π –Ω–∞ –ø–æ–¥–Ω–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π –∑–∞–∫–∞–∑!",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    data = query.data

    if data.startswith("add_"):
        item_index = int(data.split("_")[1])
        user_baskets.setdefault(user_id, []).append(item_index)
        await query.reply_text(f"‚úî –î–æ–±–∞–≤–ª–µ–Ω–æ: {menu[item_index]['name']} ({PRICE} üíã)")

    elif data.startswith("remove_"):
        item_index = int(data.split("_")[1])
        if user_id in user_baskets and item_index in user_baskets[user_id]:
            user_baskets[user_id].remove(item_index)
            await query.reply_text(f"‚ùå –£–¥–∞–ª–µ–Ω–æ: {menu[item_index]['name']}")
        else:
            await query.reply_text("–≠—Ç–æ –±–ª—é–¥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–æ–¥–Ω–æ—Å–µ.")

    elif data == "send_order":
        basket = user_baskets.get(user_id, [])
        if not basket:
            await query.reply_text("–¢–≤–æ–π –ø–æ–¥–Ω–æ—Å –ø—É—Å—Ç ü•∫")
            return

        summary = "üçΩÔ∏è –¢–≤–æ–π –∑–∞–∫–∞–∑:\n"
        total = 0
        for i in basket:
            summary += f"- {menu[i]['name']} ({PRICE} üíã)\n"
            total += PRICE

        summary += f"\n‚ô•Ô∏è –í—Å–µ–≥–æ: {total} –ø–æ—Ü–µ–ª—É–µ–≤"

        await context.bot.send_message(chat_id=OWNER_ID, text=f"üì® –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç @{query.from_user.username or query.from_user.first_name}:\n\n" + summary)
        await query.edit_message_text("‚ù§Ô∏è –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ñ–¥–∏ —Å –ª—é–±–æ–≤—å—é!")
        user_baskets[user_id] = []

async def basket(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    basket = user_baskets.get(user_id, [])
    if not basket:
        await update.message.reply_text("–¢–≤–æ–π –ø–æ–¥–Ω–æ—Å –ø—É—Å—Ç ü•∫")
        return

    text = "üö™ –ù–∞ –ø–æ–¥–Ω–æ—Å–µ:\n"
    buttons = []
    for i in basket:
        item = menu[i]
        text += f"- {item['name']} ({PRICE} üíã)\n"
        buttons.append([InlineKeyboardButton(f"‚ùå {item['name']}", callback_data=f"remove_{i}")])

    buttons.append([InlineKeyboardButton("‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="send_order")])

    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(buttons))

def main():
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("basket", basket))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()
